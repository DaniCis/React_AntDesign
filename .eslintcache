[{"C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\index.js":"1","C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\reportWebVitals.js":"2","C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\App.js":"3","C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\Navbar.js":"4","C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\Menu.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1239,"mtime":1612398996809,"results":"9","hashOfConfig":"7"},{"size":2487,"mtime":1612293935488,"results":"10","hashOfConfig":"7"},{"size":2654,"mtime":1612294198778,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vak2gn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\index.js",[],["24","25"],"C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\reportWebVitals.js",[],"C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\App.js",["26","27","28"],"C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\Navbar.js",["29","30","31","32","33","34","35"],"import React,{useState,useEffect} from 'react';\r\nimport { Switch } from 'antd';\r\nimport { UploadOutlined,UserOutlined} from '@ant-design/icons';\r\nimport {Menu,Button,Dropdown,Drawer} from \"antd\";\r\nimport './MainLayout.css';\r\n\r\nconst Navbar = ({\r\n  collapsed,\r\n  handleToggleSidebar,\r\n  handleCollapsedChange,\r\n}) => {\r\n\r\n    const [fechaActual,setfechaActual]=useState();\r\n\r\n    useEffect(()=>{\r\n        const mesNombres=['Enero','Febrero','Marzo','Abril','Mayo','Junio', 'Julio','Agosto',\r\n        'Septiembre','Octubre','Noviembre','Diciembre'];\r\n        var date = new Date().getDate(); \r\n        var month = new Date().getMonth(); \r\n        var year = new Date().getFullYear();\r\n        setfechaActual(mesNombres[month] +' '+ date +', '+year);\r\n      },[]);\r\n  \r\n      \r\n      const config = (\r\n        <Menu>\r\n          <Menu.Item key=\"0\">\r\n            <a>Opciones</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"1\">\r\n            <a>Cambiar Idioma</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <a>Cambiar Periodo</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <a>Cerrar Sesi√≥n</a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\">\r\n            <a>Salir</a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n        <div  className=\"left\">\r\n          <div className=\"trigger left\">\r\n          <div className=\"btn-toggle\" onClick={() => handleToggleSidebar(true)}>\r\n            <UploadOutlined />\r\n            </div>\r\n          </div>\r\n          <div >\r\n        <Switch\r\n          onChange={handleCollapsedChange}\r\n          checked={collapsed}\r\n        />\r\n        <span> Collapsar</span>\r\n      </div>\r\n          <div className=\"responsive left\">\r\n            <p>{fechaActual}</p>\r\n          </div>\r\n        </div> \r\n        <div className=\"center\"><p>NOMBRE EMPRESA</p></div>\r\n        <div className=\"right\">\r\n          <p className=\"responsive right\">Periodo: 2020</p>\r\n          <div className=\"responsive right usuario\">\r\n            <div className=\"userIcon right\">\r\n              <UserOutlined />\r\n            </div>\r\n            <div className=\"right\">Usuario</div>\r\n          </div> \r\n          <div className=\"right conf\">\r\n          <Dropdown overlay={config} trigger={['click']} >\r\n            <UserOutlined  onClick={e => e.preventDefault()}/>\r\n          </Dropdown> \r\n          </div>\r\n        </div>    \r\n      </nav>\r\n   \r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Dani\\Desktop\\Dani\\React\\practice_antdesign\\src\\Menu.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":24,"nodeType":"42","messageId":"43","endLine":4,"endColumn":33},{"ruleId":"40","severity":1,"message":"44","line":7,"column":17,"nodeType":"42","messageId":"43","endLine":7,"endColumn":21},{"ruleId":"40","severity":1,"message":"45","line":7,"column":22,"nodeType":"42","messageId":"43","endLine":7,"endColumn":30},{"ruleId":"40","severity":1,"message":"46","line":4,"column":14,"nodeType":"42","messageId":"43","endLine":4,"endColumn":20},{"ruleId":"40","severity":1,"message":"47","line":4,"column":30,"nodeType":"42","messageId":"43","endLine":4,"endColumn":36},{"ruleId":"48","severity":1,"message":"49","line":28,"column":13,"nodeType":"50","endLine":28,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":31,"column":13,"nodeType":"50","endLine":31,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":34,"column":13,"nodeType":"50","endLine":34,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":37,"column":13,"nodeType":"50","endLine":37,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":40,"column":13,"nodeType":"50","endLine":40,"endColumn":16},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'Drawer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]